List와 다르게 Dictionary에서의 요소 검색에 걸리는 시간 복잡도는 O(1)이다.
List는 순차적으로 요소를 확인하기 때문에 O(n)이지만
Dictionary는 해시 테이블을 이용해 O(1)의 시간 복잡도만 소요된다.

collections.Counter 객체를 이용하면 List 안에 존재하는 요소가 몇 개씩 존재하는지
Dictionary 형태로 반환해준다.
예를 들어서, Counter([1, 2, 1, 1])은 {1: 3, 2: 1}로 반환된다.

Set은 중복된 요소들을 제거하고, 중복되지 않는 요소들을 한 개 씩만 남긴다.
예를 들어서, set([1, 2, 1, 1])은 {1, 2}로 반환된다.
Set도 Dictionary와 마찬가지로 요소 검색에 걸리는 시간 복잡도는 O(1)이다.

2차원 이상의 배열을 정렬할 때, 안쪽 배열의 두 번째 값을 기준으로 정렬하고 싶으면
list = [(500, 4), (1000, 2), (100, 3)]과 같은 배열이 있을 때,
sorted 함수의 key에 lambda 함수를 사용해
sorted(list, key=lambda x: x[1]) == [(1000, 2), (100, 3), (500, 4)]와 같이 정렬된다.
(list의 요소에서 1번 인덱스 값을 추출해 정렬한다는 의미)

map 함수는 List와 같이 반복 가능한 객체를
map(적용할 함수, 반복 가능한 객체) 형식으로 인자로 받아서
각각의 요소들에 함수를 적용한다.
예를 들어서 list(map(lambda x: x + 2, [1, 2, 3, 4, 5])) == [3, 4, 5, 6, 7]이다.